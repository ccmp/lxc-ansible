- name: Stat container directory
  stat: path={{ container_dir }}
  register: rc
  failed_when: rc.stat.isdir == ' false '
  
- name: Copy hostname file
  copy: >
    src={{ personal_conf_dir }}/rootfs/{{ item.name }}
    dest={{ container_dir }}/rootfs/{{ item.name }}
    mode={{ item.mode }}
    owner={{ item.owner }}
    group={{ item.group }}
  with_items:
  - { name: '/etc/hostname', mode: '0644', owner: 'root', group: 'root' }
      
- name: Copy Keepalived config
  copy: >
    src={{ personal_conf_dir }}/rootfs/{{ item.name }}
    dest={{ container_dir }}/rootfs/{{ item.name }}
    mode={{ item.mode }}
    owner={{ item.owner }}
    group={{ item.group }}
  with_items:
    - { name: '/etc/keepalived/keepalived.conf', mode: '0644', owner: 'root', group: 'root' }
  notify:
    - restart keepalived
    
- name: Create Directory for lvs-setup
  file: state=directory path={{ container_dir }}/rootfs/work
  
- name: Copy LVS Setup files
  copy: >
    src={{ personal_conf_dir }}/rootfs/{{ item.name }} 
    dest={{ container_dir }}/rootfs/{{ item.name }}
    mode={{ item.mode }}
    owner={{ item.owner }}
    group={{ item.group }}

  with_items:
    - { name: '/work/lvs-setup.sh', mode: '0755', owner: 'root', group: 'root' }
    - { name: '/etc/systemd/system/lvs-setup.service', mode: '0644', owner: 'root', group: 'root' }
  notify:
    - restart lvs-setup

- name: Enable lvs-setup.service
  file: >
    path='{{ container_dir }}/rootfs/etc/systemd/system/multi-user.target.wants/lvs-setup.service'
    src='../lvs-setup.service'
    state=link

#- name: Run container
#  lxc_container:
#    name: "{{ container_name }}"
#    state: started
#  register: lxc_stat
#
#- name: Wait for network being ready,if container has started just now.
#  lxc_container:
#    name: "{{ container_name }}"
#    state: started
#    container_command: |
#      for i in `seq 1 10`;do systemctl is-active network.target && break ;sleep 10;done
#  when: lxc_stat.changed == ' true '
  
