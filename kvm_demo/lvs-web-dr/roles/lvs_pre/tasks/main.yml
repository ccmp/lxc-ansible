- name: Create container directory
  file: path={{ container_dir }} state=directory
- name: Extract base container
  shell: tar xfz {{ repo_dir }}/{{ base_container }}.tar.gz
  args:
    chdir: '{{ container_dir }}'
    
- name: copy hostname
  copy: >
    src={{ personal_conf_dir }}/{{ item.name }}
    dest={{ container_dir }}/rootfs/{{ item.name }} mode={{ item.mode }}
  with_items:
  - name: '/etc/hostname'
    mode: '0644'
    
- name: Edit config for temporarily running on the manager 
  template: >
    src={{ common_conf_dir }}/var/lib/lxc/config.mng
    dest={{ container_dir }}/config
    mode='0644'
  
#- name: Edit Keepalived config
#  copy: >
#    src={{ personal_conf_dir }}/{{ item.name }}
#    dest={{ container_dir }}/rootfs/{{ item.name }}
#    mode={{ item.mode }}
#    owner=root
#    group=root
#  with_items:
#    - name: '/etc/keepalived/keepalived.conf'
#      mode: '0644'

#- name: Create Directory for lvs-setup
#  file: state=directory path={{ container_dir }}/rootfs/work
  
#- name: LVS Setup
#  copy: >
#    src='{{ personal_conf_dir }}/{{ item.name }}' 
#    dest='{{ container_dir }}/rootfs/{{ item.name }}'
#    owner=root
#    group=root
#    mode='{{ item.mode }}'
#  with_items:
#    - name: '/work/lvs-setup.sh'
#      mode: '0755'
#    - name: '/etc/systemd/system/lvs-setup.service'
#      mode: '0644'
        
#- name: Enable lvs-setup.service
#  file: >
#    path='{{ container_dir }}/rootfs/etc/systemd/system/multi-user.target.wants/lvs-setup.service'
#    src='../lvs-setup.service'
#    state=link
      
- name: run container
  lxc_container:
    name: "{{ container_name }}"
    state: stopped
    
- name: Create lxc config for production
  copy: >
    src={{ personal_conf_dir }}/var/lib/lxc/config.prd
    dest={{ container_dir }}/config.prd
    mode=0644

- name: Archive rootfs for copy
  shell: tar c config.prd rootfs | gzip > {{ archive_dir }}/{{ container_name }}.tar.gz
  args:
    chdir: '{{ container_dir }}'    

- name: destroy container
  lxc_container:
    name: "{{ container_name }}"
    state: absent

- name: fetch rootfs archive
  fetch: >
    src={{ archive_dir }}/{{ container_name }}.tar.gz
    dest={{ local_archive_dir }}/
    flat=yes
      